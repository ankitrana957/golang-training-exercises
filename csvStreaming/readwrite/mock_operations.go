// Code generated by MockGen. DO NOT EDIT.
// Source: operations.go

// Package readwrite is a generated GoMock package.
package readwrite

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/personhashing/models"
)

// MockPersonReader is a mock of PersonReader interface.
type MockPersonReader struct {
	ctrl     *gomock.Controller
	recorder *MockPersonReaderMockRecorder
}

// MockPersonReaderMockRecorder is the mock recorder for MockPersonReader.
type MockPersonReaderMockRecorder struct {
	mock *MockPersonReader
}

// NewMockPersonReader creates a new mock instance.
func NewMockPersonReader(ctrl *gomock.Controller) *MockPersonReader {
	mock := &MockPersonReader{ctrl: ctrl}
	mock.recorder = &MockPersonReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPersonReader) EXPECT() *MockPersonReaderMockRecorder {
	return m.recorder
}

// Read mocks base method.
func (m *MockPersonReader) Read() (models.Person, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read")
	ret0, _ := ret[0].(models.Person)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockPersonReaderMockRecorder) Read() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockPersonReader)(nil).Read))
}
